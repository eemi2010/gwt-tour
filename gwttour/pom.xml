<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.eemi.gwt</groupId>
  <artifactId>tour</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>
  
	<name>gwttour</name>
	<description>GWT API for the hopscotch framework</description>
	<inceptionYear>2013</inceptionYear>

	<properties>
		<!--Trick to deploy releases (using mvn release:perform) to the local file 
			system. The release is actually performed from target/checkout, which is 
			why we need those ../../ . Notice that after deployment, you should commit 
			and push to the git repository. -->
		<altDeploymentRepository>release-repo::default::file:../../releases</altDeploymentRepository>
		<!-- Compiler properties -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.6</maven.compiler.source>
		<maven.compiler.target>1.6</maven.compiler.target>
		<!-- GWT version -->
		<gwt.version>2.4.0</gwt.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- github server corresponds to entry in ~/.m2/settings.xml -->
    	<github.global.server>github</github.global.server>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-servlet</artifactId>
			<version>${gwt.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<version>${gwt.version}</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<build>

		<!-- Include .gwt.xml -->
		<resources>
			<resource>
				<directory>src/main/java</directory>
			</resource>
		</resources>

		<plugins>
			<plugin>
			    <artifactId>maven-deploy-plugin</artifactId>
			    <version>2.7</version>
			    <configuration>
			        <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
			    </configuration>
			</plugin>	  
        	<plugin>
	            <groupId>com.github.github</groupId>
	            <artifactId>site-maven-plugin</artifactId>
	            <version>0.8</version>
	            <configuration>
	                <message>Maven artifacts for ${project.version}</message>  <!-- git commit message -->
	                <noJekyll>true</noJekyll>                                  <!-- disable webpage processing -->
	                <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory> <!-- matches distribution management repository url above -->
	                <branch>refs/heads/mvn-repo</branch>                       <!-- remote branch name -->
	                <includes><include>**/*</include></includes>
	                <repositoryName>gwt-tour</repositoryName>      	<!-- github repo name -->
	                <repositoryOwner>kerbymart</repositoryOwner>    <!-- github username  -->
	            </configuration>
	            <executions>
	              <!-- run site-maven-plugin's 'site' target as part of the build's normal 'deploy' phase -->
	              <execution>
	                <goals>
	                  <goal>site</goal>
	                </goals>
	                <phase>deploy</phase>
	              </execution>
	            </executions>
        	</plugin>		                
            <!-- Default plugins -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.1</version><!--$NO-MVN-MAN-VER$ -->
				<configuration>
					<useReleaseProfile>false</useReleaseProfile>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.source}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
		</plugins>
	</build>  
	<distributionManagement>
	    <repository>
	        <id>github</id>
	        <name>GitHub ${project.artifactId} Repository</name>
	        <url>https://raw.github.com/kerbymart/${project.artifactId}/mvn-repo</url>
	    </repository>
	</distributionManagement>  
</project>
